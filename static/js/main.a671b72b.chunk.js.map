{"version":3,"sources":["fbase.js","components/CreateProblem.js","components/ShowProblems.js","components/ShowStat.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","CreateProblem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","collection","currentUser","uid","add","info","state","createdTime","Date","now","createdName","displayName","setState","sectionNumber","sectionName","examType","examYear","problemPage","problemScore","reason","description","solvedMonth","solvedWeek","stop","_x","apply","arguments","handleChange","bind","assertThisInitialized","defineProperty","target","name","value","month","getMonth","window","alert","react_default","createElement","onChange","_this2","console","log","className","style","alignSelf","onClick","resetData","chapter","placeholder","width","height","type","Component","ShowProblems","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","problems","setProblems","_useState5","_useState6","specificDisplay","setSpecificDisplay","useEffect","onSnapshot","snapshot","problemArray","docs","map","doc","objectSpread","id","data","onDeleteClick","problem","confirm","concat","delete","Fragment","backgroundColor","key","position","border","marginLeft","marginRight","marginTop","padding","overflowWrap","textAlign","right","top","ShowStat","App","init","setInit","isLoggedIn","setIsLoggedIn","showProblems","setShowProblems","_useState7","_useState8","setUserObj","onAuthStateChanged","user","onLoginClick","provider","auth","GoogleAuthProvider","signInWithRedirect","sent","onLogOutClick","_ref2","_callee2","_context2","signOut","margin","components_CreateProblem","fontSize","components_ShowProblems","components_ShowStat","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a671b72b.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n    apiKey: 'AIzaSyBj5wBh_lPmUtKKaKDxc4KO0u1-2D450pA',\n    authDomain: 'chemian-63230.firebaseapp.com',\n    databaseURL: 'https://chemian-63230.firebaseio.com',\n    projectId: 'chemian-63230',\n    storageBucket: 'chemian-63230.appspot.com',\n    messagingSenderId: '828302993437',\n    appId: '1:828302993437:web:cd28315326f84b7f47fef4',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();","import React, { Component } from 'react';\nimport { authService, dbService } from '../fbase.js';\n\nclass CreateProblem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sectionNumber: '1',\n            sectionName: '우리 생활 속의 화학',\n            examType: '평가원',\n            examYear: '2020',\n            problemPage: '1',\n            problemScore: '2',\n            reason: '오개념',\n            description: '',\n            solvedMonth: '',\n            solvedWeek: '1주차',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\t\n    onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.collection(authService.currentUser.uid).add({\n            info: this.state,\n            createdTime: Date.now(),\n\t\t\tcreatedName: authService.currentUser.displayName,\n        });\n\t\t\n\t\t//old handleSubmit below\n        // let data = JSON.parse(localStorage.getItem('problems'));\n        // if (data === null) {\n        //     data = [];\n        //     data.push(this.state);\n        // } else {\n        //     data = Object.values(data);\n        //     data.push(this.state);\n        // }\n        // localStorage.setItem('problems', JSON.stringify(data));\n\n        this.setState({\n            sectionNumber: '1',\n            sectionName: '우리 생활 속의 화학',\n            examType: '평가원',\n            examYear: '2020',\n            problemPage: '1',\n            problemScore: '2',\n            reason: '오개념',\n            description: '',\n            solvedMonth: '',\n            solvedWeek: '1주차',\n        });\n\t\t\n\t\t\n    };\n\n    componentDidMount() {\n        if (this.state.solvedMonth == '') {\n            let today = new Date();\n            let month = today.getMonth() + 1;\n            this.setState({ solvedMonth: month + '월' });\n        }\n    }\n    componentDidUpdate() {\n        if (this.state.solvedMonth == '') {\n            let today = new Date();\n            let month = today.getMonth() + 1;\n            this.setState({ solvedMonth: month + '월' });\n        }\n    }\n\n    async resetData() {\n\t\twindow.alert(\"준비 중\");\n\t\t\t// if (window.confirm('정말 초기화 하시겠습니까?\\n입력한 모든 데이터가 삭제됩니다.')) {\n\t\t\t// await dbService.doc(`${authService.currentUser.uid}/`).delete();\n\t\t\t// this.setState({\n\t\t\t// sectionNumber: '1',\n\t\t\t// sectionName: '우리 생활 속의 화학',\n\t\t\t// examType: '평가원',\n\t\t\t// examYear: '2020',\n\t\t\t// problemPage: '1',\n\t\t\t// problemScore: '2',\n\t\t\t// reason: '오개념',\n\t\t\t// description: '',\n\t\t\t// solvedMonth: '',\n\t\t\t// solvedWeek: '1주차',\n\t\t\t// });\n\t\t\t// } else {\n\t\t\t// }\n    }\n\n    chapter(sectionNumber) {\n        if (sectionNumber === '1') {\n            return (\n                <select name=\"sectionName\" value={this.state.value} onChange={this.handleChange}>\n                    <option value=\"우리 생활 속의 화학\">우리 생활 속의 화학</option>\n                    <option value=\"화학식량과 몰\">화학식량과 몰</option>\n                    <option value=\"화학반응식\">화학반응식</option>\n                    <option value=\"농도\">농도</option>\n                </select>\n            );\n        }\n        if (sectionNumber === '2') {\n            return (\n                <select name=\"sectionName\" value={this.state.value} onChange={this.handleChange}>\n                    <option value=\"원자의 구조\">원자의 구조</option>\n                    <option value=\"원자모형\">원자모형</option>\n                    <option value=\"전자배치와 양자수\">전자배치와 양자수</option>\n                    <option value=\"주기적성질\">주기적성질</option>\n                </select>\n            );\n        }\n        if (sectionNumber === '3') {\n            return (\n                <select name=\"sectionName\" value={this.state.value} onChange={this.handleChange}>\n                    <option value=\"이온결합\">이온결합</option>\n                    <option value=\"공유결합과 극성\">공유결합과 극성</option>\n                    <option value=\"분자구조와 성질\">분자구조와 성질</option>\n                </select>\n            );\n        }\n        if (sectionNumber === '4') {\n            return (\n                <select name=\"sectionName\" value={this.state.value} onChange={this.handleChange}>\n                    <option value=\"동적평형\">동적평형</option>\n                    <option value=\"중화반응\">중화반응</option>\n                    <option value=\"산화환원\">산화환원</option>\n                    <option value=\"반응열\">반응열</option>\n                </select>\n            );\n        }\n    }\n\t\n    render() {\n\t\tconsole.log(this.state);\n        return (\n            <div className=\"inputs\">\n                <h1 style={{ alignSelf: 'center' }}>오답 입력</h1>\n                <button\n                    onClick={() => {\n                        this.resetData();\n                    }}\n                    style={{ alignSelf: 'flex-end' }}\n                >\n                    초기화\n                </button>\n                <form onSubmit={this.onSubmit}>\n                    <label>\n                        푼 시기:\n                        <select\n                            name=\"solvedMonth\"\n                            value={this.state.solvedMonth}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"1월\">1월</option>\n                            <option value=\"2월\">2월</option>\n                            <option value=\"3월\">3월</option>\n                            <option value=\"4월\">4월</option>\n                            <option value=\"5월\">5월</option>\n                            <option value=\"6월\">6월</option>\n                            <option value=\"7월\">7월</option>\n                            <option value=\"8월\">8월</option>\n                            <option value=\"9월\">9월</option>\n                            <option value=\"10월\">10월</option>\n                            <option value=\"11월\">11월</option>\n                            <option value=\"12월\">12월</option>\n                        </select>\n                        <select\n                            name=\"solvedWeek\"\n                            value={this.state.solvedWeek}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"1주차\">1주차</option>\n                            <option value=\"2주차\">2주차</option>\n                            <option value=\"3주차\">3주차</option>\n                            <option value=\"4주차\">4주차</option>\n                            <option value=\"5주차\">5주차</option>\n                        </select>\n                    </label>\n                    <label>\n                        단원:\n                        <select\n                            name=\"sectionNumber\"\n                            value={this.state.sectionNumber}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"1\">1단원</option>\n                            <option value=\"2\">2단원</option>\n                            <option value=\"3\">3단원</option>\n                            <option value=\"4\">4단원</option>\n                        </select>\n                        {this.chapter(this.state.sectionNumber)}\n                    </label>\n                    <label>\n                        모의고사 분류:\n                        <select\n                            name=\"examType\"\n                            value={this.state.examType}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"평가원\">평가원</option>\n                            <option value=\"교육청\">교육청</option>\n                            <option value=\"사설\">사설</option>\n                            <option value=\"수능특강\">수능특강</option>\n                        </select>\n                    </label>\n                    <label>\n                        출제년도:\n                        <select\n                            name=\"examYear\"\n                            value={this.state.examYear}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"2020\">2020</option>\n                            <option value=\"2019\">2019</option>\n                            <option value=\"2018\">2018</option>\n                            <option value=\"2017\">2017</option>\n                            <option value=\"2016\">2016 이전</option>\n                        </select>\n                    </label>\n                    <label>\n                        페이지:\n                        <select\n                            name=\"problemPage\"\n                            value={this.state.problemPage}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                        </select>\n                    </label>\n                    <label>\n                        배점:\n                        <select\n                            name=\"problemScore\"\n                            value={this.state.problemScore}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                        </select>\n                    </label>\n                    <label>\n                        틀린 이유:\n                        <select\n                            name=\"reason\"\n                            value={this.state.reason}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"오개념\">오개념</option>\n                            <option value=\"시간부족\">시간부족</option>\n                            <option value=\"판단오류\">판단오류</option>\n                            <option value=\"계산실수\">계산실수</option>\n                            <option value=\"기타\">기타</option>\n                        </select>\n                    </label>\n                    <label>\n                        세부 내용:\n                        <textarea\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                            placeholder=\"세부 내용\"\n                            style={{ width: 260, height: 60 }}\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"등록\" style={{ width: '100%', height: 30 }} />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreateProblem;","import React, { useState, useEffect } from 'react';\nimport { authService, dbService } from '../fbase.js';\n\nfunction ShowProblems() {\n    const [problem, setProblem] = useState(null);\n    const [problems, setProblems] = useState([]);\n\tconst [specificDisplay, setSpecificDisplay] = useState(false);\n    // const getProblems = async () => {\n    //   const dbProblems = await dbService.collection(authService.currentUser.uid).get();\n    //   dbProblems.forEach((document) => {\n    //     const problemObject = {\n    //       ...document.data(),\n    //       id: document.id,\n    //     };\n    //     setProblems((prev) => [problemObject, ...prev]);\n    //   });\n    // };\n    useEffect(() => {\n        // getProblems();\n        dbService.collection(authService.currentUser.uid).onSnapshot((snapshot) => {\n            const problemArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setProblems(problemArray);\n        });\n    }, []);\n\n    const onDeleteClick = async (problem) => {\n        const ok = window.confirm('정말 삭제하시겠습니까??');\n        if (ok) {\n            await dbService.doc(`${authService.currentUser.uid}/${problem.id}`).delete();\n        }\n    };\n\n    return (\n        <>\n            <input\n                type=\"button\"\n                value=\"필터\"\n                onClick={() => { setSpecificDisplay(!specificDisplay); window.alert('준비 중')}}\n                style={{ backgroundColor: specificDisplay ? 'lightgray' : 'white' }}\n            />\n            <div>\n                {problems.map((problem) => (\n                    <div\n                        key={problem.id}\n                        style={{\n                            position: 'relative',\n                            border: '1px solid gray',\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            marginTop: 10,\n                            padding: 3,\n                            overflowWrap: 'break-word',\n                            textAlign: 'left',\n                        }}\n                    >\n                        {problem.info.sectionNumber + '단원 ' + problem.info.sectionName}\n                        {'(' +\n                            problem.info.examYear +\n                            '년 ' +\n                            problem.info.examType +\n                            ' 기출' +\n                            ')'}\n                        <button\n                            onClick={() => onDeleteClick(problem)}\n                            style={{ right: 0, top: 0, position: 'absolute' }}\n                        >\n                            삭제\n                        </button>\n                        <br />\n                        {problem.info.problemPage + '페이지 (' + problem.info.problemScore + '점)'}\n                        <br />\n                        {'푼 시기: ' + problem.info.solvedMonth + problem.info.solvedWeek + '주차'}\n                        <br />\n                        {'오답 사유 : ' + problem.info.reason}\n                        <br />\n                        {'세부 내용 : ' + problem.info.description}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n}\nexport default ShowProblems;","import React, { Component } from 'react';\nimport { authService, dbService } from \"../fbase.js\";\n\nfunction ShowStat() {\n\t\n\treturn <div>Coming Soon ㅠㅠ</div>\n}\nexport default ShowStat;","import React, { Component, Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport CreateProblem from './CreateProblem.js';\nimport ShowProblems from './ShowProblems.js';\nimport ShowStat from './ShowStat.js';\n\nimport { authService, firebaseInstance } from '../fbase.js';\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [showProblems, setShowProblems] = useState(true);\n  const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n\t\t\t\tsetUserObj(user);\n            } else {\n                setIsLoggedIn(false);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const onLoginClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\n        const data = await authService.signInWithRedirect(provider);\n    };\n\n    const onLogOutClick = async () => {\n        await authService.signOut();\n    };\n\n\n    return (\n        <>\n            {init ? (\n                <>\n                    {isLoggedIn || (\n                        <button onClick={onLoginClick} style={{margin:'auto'}}>Google Login</button>\n                    )}\n                    {!isLoggedIn || (\n                        <button onClick={onLogOutClick} style={{margin:'auto'}}>Log out</button>\n                    )}\n                    {isLoggedIn && (\n                        <div className=\"App\">\n\t\t\t\t\t\t\t\n                            <CreateProblem />\n                            <input\n                                type=\"button\"\n                                value=\"오답보기\"\n                                style={{\n                                    margin: 5,\n                                    width: 100,\n                                    height: 40,\n                                    fontSize: '1rem',\n                                }}\n                                onClick={() =>\n                                    setShowProblems(true)\n                                }\n                            />\n                            <input\n                                type=\"button\"\n                                value=\"통계보기\"\n                                style={{\n                                    margin: 5,\n                                    width: 100,\n                                    height: 40,\n                                    fontSize: '1rem',\n                                }}\n                                onClick={() =>\n                                    setShowProblems(false)\n                                }\n                            /><br/>\n                            {showProblems && <ShowProblems />}\n                            {showProblems || <ShowStat />}\n                        </div>\n                    )}\n                </>\n            ) : (\n                <div>Loading...</div>\n            )}\n        </>\n    );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}